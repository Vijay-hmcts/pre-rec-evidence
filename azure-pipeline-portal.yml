name: PRE portal deployment
trigger: none
pool:
  vmImage: windows-latest
variables:
  - group: auth-stg
parameters:
  - name: serviceConnection
    displayName: Use environment Service Connection
    type: string
    default: 'POWERAPPS-PRE-SDS-SBOX'
    values:
      # - 'POWERAPPS-PRE-SBOX'
      - 'POWERAPPS-PRE-SDS-SBOX'
      - 'POWERAPPS-PRE-SDS-DEV'
      - 'POWERAPPS-PRE-SDS-STG'
      - 'POWERAPPS-PRE-SDS-PROD'

steps:
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'src/Portal'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: 'dts-pre-portal.zip'
      replaceExistingArchive: true
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'dts-pre-portal.zip'
      artifact: 'Power Apps Portal archive'
      publishLocation: 'pipeline'
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        Invoke-WebRequest https://aka.ms/PowerAppsCLI -OutFile pac.msi
        msiexec /i pac.msi /quiet /norestart
  - task: PowerShell@2
    env:
     # PowerPlatformAadApplicationSecret: $(PowerPlatformAadApplicationSecret)
      PacAuthProfileName: ${{ parameters.serviceConnection }}
    inputs:
      targetType: 'inline'
      script: |
        # refresh path to make pac available
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        pac install latest
        # pac auth create --name "portalstg" --url $(portalinstanceurl) --username $(portaluser) --password $(portalpassword)
        pac auth create --name $(PacAuthProfileName) `
          --url $(portalinstanceurl) `
          --tenant $(PowerPlatformAadDirectoryId) `
          --applicationId $(PowerPlatformAadApplicationId) `
          --clientSecret $(PowerPlatformAadApplicationSecret)
        pac org who
        pac auth select --name $(PacAuthProfileName)
        pac paportal upload --path $(System.DefaultWorkingDirectory)/src/portal
